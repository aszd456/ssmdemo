<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
">
    <!-- 启用spring mvc 注解
    <context:annotation-config/>
    -->
    <!--SpringMVC 主要就是来管理网站的跳转逻辑，所以在配置扫描的包时，使用 use-default-filters 属性，
    并设置为 false，即不使用默认的 Filter 进行扫描。-->
    <context:component-scan base-package="com.springmvc.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 配置注解驱动，替代推荐使用的映射器以及适配器，json转换器 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <bean id="mappingGsonHttpMessageConverter"
                  class="org.springframework.http.converter.json.GsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 放行静态资源-->
    <mvc:default-servlet-handler/>

    <!--静态资源配置-->
    <mvc:resources mapping="/**" location="/"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--thymeleaf   -->
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".html"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="order" value="1"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
    </bean>
    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>

    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!--文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--默认的编码-->
        <property name="defaultEncoding" value="UTF-8"/>
        <!--上传的总文件大小-->
        <property name="maxUploadSize" value="1048576"/>
        <!--上传的单个文件大小-->
        <property name="maxUploadSizePerFile" value="1048576"/>
        <!--内存中最大的数据量，超过这个数据量，数据就要开始往硬盘中写了-->
        <property name="maxInMemorySize" value="4096"/>
        <!--临时目录，超过 maxInMemorySize 配置的大小后，数据开始往临时目录写，等全部上传完成后，再将数据合并到正式的文件上传目录-->
        <property name="uploadTempDir" value="file:///D:\\tmp"/>
    </bean>

    <!-- 拦截器
    国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>
    -->

    <bean class="com.springmvc.domain.User" id="user"/>
</beans>
